{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOption/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOption/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","this","props","options","onLeaveFeedback","className","s","group_button","map","id","type","name","button","onClick","Component","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","Section","countTotalFeedback","state","countPositiveFeedbackPercentage","parseFloat","toFixed","setState","prevState","title","App","ReactDOM","render","document","querySelector"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,WAAa,iC,iJCGVC,E,4JAQjB,WAAS,IAAD,EACiCC,KAAKC,MAAlCC,EADJ,EACIA,QAASC,EADb,EACaA,gBACjB,OACI,qBAAKC,UAAWC,IAAEC,aAAlB,SACKJ,EAAQK,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,KAAZ,OACT,wBACID,KAAK,SACLL,UAAWC,IAAEM,OAEbC,QAAS,kBAAMT,EAAgBM,IAJnC,SAI2CC,GADlCF,Y,GAhBgBK,aAAxBd,EACVe,aAAe,CAClBZ,QAAQ,I,qBCDKa,E,4JAkBjB,WAAS,IAAD,EACoDf,KAAKC,MAAtDe,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAAKC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,mBAClC,OACI,8BACI,qBAAIhB,UAAWC,IAAEgB,WAAjB,UACI,+BAAI,wCAAJ,KAAwBL,KACxB,+BAAI,2CAAJ,KAA2BC,KAC3B,+BAAI,uCAAJ,KAAuBC,KACvB,+BAAI,yCAAJ,KAAyBC,KACzB,+BAAI,qDAAJ,KAAqCC,EAArC,gB,GA3BoBP,aCFzB,SAASS,EAAT,GAAiC,IAAVC,EAAS,EAATA,QAClC,OACI,6BAAKA,IDAQR,EAEVD,aAAe,CAClBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAM,EACNC,mBAAmB,GCH3BE,EAAaR,aAAe,CACxBS,QAAS,qBCFb,IAAMrB,EAAU,CACZ,CAACM,GAAG,EAAGE,KAAK,OAAQD,KAAK,QACzB,CAACD,GAAG,EAAGE,KAAK,UAAWD,KAAK,WAC5B,CAACD,GAAG,EAAGE,KAAK,MAAOD,KAAK,QAGPe,E,kDAKjB,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IAUVwB,mBAAqB,WAAO,IAAD,EACM,EAAKC,MAClC,OAFuB,EAChBV,KADgB,EACVC,QADU,EACDC,KAZR,EAgBlBS,gCAAkC,WAE9B,IAAMR,EAAQ,EAAKM,qBACXT,EAAS,EAAKU,MAAdV,KAKR,OAAOY,YAHiB,IAAMT,EACOH,GAERa,QAAQ,KAxBvB,EA2BlB1B,gBAAkB,SAACM,GACf,EAAKqB,UAAS,SAAAC,GACX,OAAO,eAAGtB,EAAMsB,EAAUtB,GAAM,OA1BnC,EAAKiB,MAAQ,CACTV,KAAM,EACNC,QAAS,EACTC,IAAK,GANK,E,0CAiClB,WAAS,IACGc,EAAUhC,KAAKC,MAAf+B,MADJ,EAE0BhC,KAAK0B,MAA3BV,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,IACjBO,EAAqBzB,KAAKyB,qBAC1BE,EAAkC3B,KAAK2B,kCAE7C,OACI,qCACI,6BAAKK,IACL,cAAC,EAAD,CAAiB9B,QAASA,EAASC,gBAAiBH,KAAKG,kBACzD,uBAEA,4CACY,IAATa,GAA0B,IAAZC,GAA0B,IAARC,EAC/B,cAAC,EAAD,CAAYF,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOM,EAAoBL,mBAAoBO,IACnG,cAACL,EAAD,CAAcU,MAAM,6B,GArDHnB,aAAhBW,EACVV,aAAe,CAClBkB,MAAM,gB,MCbC,SAASC,IACtB,OACD,qBAAK7B,UAAU,gBAAf,SACM,cAAC,EAAD,CAAS4B,MAAM,4BCDtBE,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,cAAc,W,kBCJpDxC,EAAOC,QAAU,CAAC,aAAe,sCAAsC,OAAS,mC","file":"static/js/main.a5d3f23e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__36GAA\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default class FeedbackOptions extends Component {\n    static defaultProps = {\n        options:[]\n    }\n    static propTypes = {\n        options: PropTypes.array.isRequired\n    }\n\n    render(){\n        const { options, onLeaveFeedback } = this.props;\n        return(\n            <div className={s.group_button}>\n                {options.map(({id, type, name}) => (\n                    <button\n                        type=\"button\"\n                        className={s.button}\n                        key={id}\n                        onClick={() => onLeaveFeedback(type)}>{name}\n                    </button>\n                ))}\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from'./Statistics.module.css';\n\nexport default class Statistics extends Component {\n\n    static defaultProps = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        total:0,\n        positivePercentage:0\n    }\n\n    static propTypes = {\n        good: PropTypes.number.isRequired,\n        neutral:  PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n        positivePercentage: PropTypes.number.isRequired\n    }\n\n    render(){\n        const {good, neutral, bad, total, positivePercentage} = this.props;\n        return(\n            <div>\n                <ul className={s.statistics}>\n                    <li><span>Good</span>: {good}</li>\n                    <li><span>Neutral</span>: {neutral}</li>\n                    <li><span>bad</span>: {bad}</li>\n                    <li><span>Total</span>: {total}</li>\n                    <li><span>Positive feedback</span>: {positivePercentage}%</li>\n                </ul>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({message}){\n    return(\n        <h3>{message}</h3>\n    );\n}\n\nNotification.defaultProps = {\n    message: \"No feedback given\"\n}\n\nNotification.propTypes = {\n    message:PropTypes.string\n}","import React, { Component } from 'react';\n\nimport FeedbackOptions from '../../components/FeedbackOption/FeedbackOptions';\nimport Statistics from '../../components/Statistics/Statistics';\nimport Notification from '../../components/Notification/Notification';\n\n\n\nconst options = [\n    {id:1, name:\"Good\", type:'good'},\n    {id:2, name:\"Neutral\", type:'neutral'},\n    {id:3, name:\"Bad\", type:'bad'}\n];\n\nexport default class Section extends Component {\n    static defaultProps = {\n        title:'Section Name'\n    };\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            good: 0,\n            neutral: 0,\n            bad: 0,\n        }\n\n    }\n\n    countTotalFeedback = () => {\n        const {good, neutral, bad} = this.state;\n        return good + neutral + bad;\n    }\n\n    countPositiveFeedbackPercentage = () => {\n\n        const total = this.countTotalFeedback();\n        const { good } = this.state;\n       \n        const totslPercentage = 100 / total;\n        const percentage = totslPercentage * good;\n\n        return parseFloat(percentage.toFixed(0));\n    }\n\n    onLeaveFeedback = (type) => {\n        this.setState(prevState => {\n           return { [type]:prevState[type]+1 }\n        }) \n    }\n\n    render(){\n        const { title } = this.props;\n        const { good, neutral, bad} = this.state;\n        const countTotalFeedback = this.countTotalFeedback();\n        const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n        return(\n            <> \n                <h2>{title}</h2>\n                <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n                <br/>\n\n                <h2>Statistics</h2>\n                { (good !== 0 || neutral !== 0 ||  bad !== 0) ? \n                    <Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback} positivePercentage={countPositiveFeedbackPercentage} /> :\n                    <Notification title=\"No feedback given\" />\n                     \n                }\n            </>\n        );\n    }\n\n}","import Section from './Section/Section';\nimport './App.css'\n\nexport default function App() {\n  return (\n <div className=\"mainContainer\">\n       <Section title=\"Please leave feedback\" />\n </div>\n   \n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App></App>, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group_button\":\"FeedbackOptions_group_button__36dTa\",\"button\":\"FeedbackOptions_button__1EbjZ\"};"],"sourceRoot":""}